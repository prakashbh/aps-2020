*Lesson Plan*
=============

Class 01
--------
- Introduction
- Course format structure
- APS 2020 Oath
- Handout activity to generate all possible permutations using recursion
- Handout of efficiency classes vs input size
- Asymptotic Notations
- Dyck sequence and paths (dicussion and code)
- Stable marriage problem (discussion and code)
- Catalan nummbers - Math formula and Dyck relation
- Tip on using INT_MAX, INT_MIN etc
- Bitwise operations: toggling with upper and lower case characters
- Code Vie 01 practice contest


Class 02
--------
- DP Introduction
- DP: Subset Sum Problem
- DP: Rod Cutting Problems
- Code Vie 02 Completition with DP Variants


Class 03
--------
- Handout on generations substrings of a given string
- Ways to reach 3, 5, 10: Brute Force and DP
- memset() and working
- Pascals Triangle and obsevations
- Pascals Triangle and Catalan numbers
- Count the set numbers using bitwise
- Tips: Check even or odd, Global declaration of array
- Catalan numbers applications: Mountain Ranges problem
- Journey to the Moon: assignment


Class 04
--------
- Handout on generation of all possible combinations of given numbers
- Tip: using log10() to find number of digits in a number
- Check if the ith bit is set in N
- DP: longest increasing subsequence
- Converting real time and math problems into graphs
- Union find: basic version
- Implementing Kruskal's algorithm using union-find
- DFS 2 ordering
- Team of 3 quiz: handout on generating subsets using bitwise, Code Vie 03 and crossword puzzle on mathematics. 
- Code Vie 04 on DFS ordering


Class 05
--------
- Handout on printing numbers whose sum of digits add up to 10
- Bitwise: set ith bit, unset ith bit, check if the ith bit is set
- Bitwise DP on assignment problem: logic, tracing and implementation
- Union-find: root method
- Fun fair case study : understanding the problem
- Palindrome problem using LCS
- 10 tips and tricks for competitive programming


Class 06
--------
- Binomial co-efficients: basics and implementation, variants
- Heap: understanding and implementation
- Heap: efficiency Analysis
- Code Vie 05 on math and bitwise operations


Class 07
--------
- Handout on verification of subset sum
- Subset sum using DP
- Bitwise: if-else assignment, min, max
- Union-Find: weighted union method and implementation
- PBL Fun-Fair analysis of student group submissions relating to course principles
- Fun-Fair: Foundation to Week of Code
- Heap revision, code and analysis
- Code Vie 06 on Heaps (Questions from HackerRank)


Class 08
--------
- Week of Code
- Kadane's algorithm
- MO's algorithm (square root decomposition) - theory
- Segment Tree : theory
- Lookup Table : theory and details
- Sparse Table : theory and code
- Isolating first set bit : bitwise
- Fenwick Tree (BIT) : theory and code
- Analysis of week of code : journey by far
- 6 handouts with respect to each
- Week of Code on HackerRank with 6  challenges


Class 09
--------
- Take-Home classes
- COVID-19 challenges
- oeis.org
- Josephus Problem
- Jugglers Sequence
- MO's algorithm: Design and Implementation
- Riddles: 10 riddles covering 10 math concepts
- Catalan Implementation and another example


Class 10
--------
- Graph You class
- Covers DFS, BFS, Dijkstra, Prim, Kruskal, Floyd, Warshall, Bellman-Ford
- Each concept covers: Audio notes, notes, codes, handbook and an exercise
- Estimated effort: 15 to 20 hours to complete




